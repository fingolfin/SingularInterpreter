bigintmat m[2][2] = 1, 2, 3, 4;

ASSUME(0, m[1, 1] == 1);
ASSUME(0, m[1, 2] == 2);
ASSUME(0, m[2, 1] == 3);
ASSUME(0, m[2, 2] == 4);

m[1, 2] = 7;

ASSUME(0, m[1, 1] == 1);
ASSUME(0, m[1, 2] == 7);
ASSUME(0, m[2, 1] == 3);
ASSUME(0, m[2, 2] == 4);

kill m;

bigintmat m[3][3] = 1, 2, 3, 4, 5;
ASSUME(0, m[1, 1] == 1);
ASSUME(0, m[1, 2] == 2);
ASSUME(0, m[1, 3] == 3);
ASSUME(0, m[2, 1] == 4);
ASSUME(0, m[2, 2] == 5);
ASSUME(0, m[2, 3] == 0);

m[2..3, 1..2] = 11, 12, 13, 14;
ASSUME(0, m[1, 1] == 1);
ASSUME(0, m[1, 2] == 2);
ASSUME(0, m[1, 3] == 3);
ASSUME(0, m[2, 1] == 11);
ASSUME(0, m[2, 2] == 12);
ASSUME(0, m[2, 3] == 0);
ASSUME(0, m[3, 1] == 13);
ASSUME(0, m[3, 2] == 14);
ASSUME(0, m[3, 3] == 0);

// TODO: implement:
// ASSUME(bigintmat(m) == m);
